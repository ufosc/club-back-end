language: rust
rust:
  - nightly
services:
  - postgresql
env:
  global:
    - PGPORT=5432
    - DATABASE_URL=postgres://osc:stallman@localhost/osc
before_script:
  - psql -c 'create database osc;' -U postgres
  - psql -c "CREATE USER osc WITH PASSWORD 'stallman';" -U postgres
  - rustup component add rustfmt-preview
# The below command is forced, because the diesel_cli may or may not be installed (do to cacheing) and this prevents it from failing
  - cargo install --forced diesel_cli --no-default-features --features postgres
script:
  - bash -c "bash ./wait-for-database.sh db:5432 -q -- diesel setup"
# Check and fail if user hasn't run cargo fmt
  - cargo fmt --all -- --check
# Check and fail if code doesn't build
  - cargo build
# Check and fail if code doesn't pass unit tests
  - cargo test -- --test-threads=1
cache: cargo
